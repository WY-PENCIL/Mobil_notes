# 如果一个函数在内部不停调用自己本身，这个函数就是递归函数

# 递归函数必须有一个明确的结束条件，否则会陷入死循环 递归出口

# 递归函数的参数需要不断变化，否则会陷入死循环

# 递归函数的返回值需要不断变化，否则会陷入死循环

# 递归函数的返回值需要与参数的变化关系一致，否则会陷入死循环

#递归函数每进更深的一层的递归，问题规模就一定是比上一层递归小，而且要小到一定的程度，否则会陷入死循环

# def addFun(num):
#     if num==1:
#         return 1
#     else: return num+addFun(num-1)

# print(addFun(100))

# 1,1,2,3,5,8,13

def fibFun(n):
    if n==1 or n==2:
        return 1
    else:
        return fibFun(n-1)+fibFun(n-2)
    
#递归函数：先构成逻辑链，在根据逻辑链，明确的递归出口进行计算（出口即为入口），效率低，但是代码简洁，可读性好，适合解决数学问题